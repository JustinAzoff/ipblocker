

IPBlocker

Justin Azoff

 Design

The "IPBlocker" service is one component in a system that 
can be used to block systems by managing the adding and 
removing of null routes.

The core of the IPBlocker service is its backend 
database. This database stores a list of all the IPs that

* Are pending being blocked

* Are currently blocked

* Are pending being un-blocked

* Have been unblocked

For each IP the following is also stored

* The time it was blocked

* The time it should be unblocked

* The time it was unblocked

* The user or system who requested the block

* The reason for the block

A second part of IPBlocker is a management program that 
looks at the database, and the router config, and then 
blocks or unblocks an IP based on the current 
information. This management program works as follows:

1. Unblocks each IP pending being unblocked

2. Blocks each IP pending being blocked

This "unblock" then "block" order was chosen so that if any 
failures occur, it will be more likely that systems 
will only be unblocked, rather than systems only being 
blocked. The actual method used to block an IP is as follows:

1. The current null route list is pulled from the router

2. If the IP is already in this list, a warning is printed

3. An 'ip route' command is ran to nullroute this IP

4. The current null route list is pulled again from the router

5. The new current list is searched for the IP

6. If it is found, the IP is marked as being blocked

7. If it is not found, an error is logged that says the 
  IP was unable to be blocked

The method used to unblock an IP is the same, but with 
all the logic reversed.

The management program runs as a scheduled task at 1 
minute intervals. If the management program ever has 
trouble blocking or unblocking a host, it will simply 
try again 1 minute later.

 Testing

Numerous tests against a cisco 3750 have been 
performed. All of them have resulted in IPBlocker 
successfully blocking and unblocking IP addresses, 
while maintaining the accuracy of the database. In each 
of these tests the management program either failed 
before logging in, or failed while trying to verify the 
changes it made. The failures were logged, and no 
changes were made to the database. The management 
program re-tried making the changes every minute until 
it was successful. 

 Router Reboot

I rebooted the router as the management program was 
updating the router.

 Router Communications Failure

I shutdown the uplink port as the management program 
was updating the router.
