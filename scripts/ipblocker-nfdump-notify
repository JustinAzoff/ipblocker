#!/usr/bin/env python
# nfdump-flow-notify
# Copyright (C) 2010 Justin Azoff JAzoff@uamail.albany.edu
#
# This module is released under the MIT License:
# http://www.opensource.org/licenses/mit-license.php

import pynfdump

import datetime
import sys
import csv
import os

from ipblocker import model

cols = 'first srcip srcport dstip dstport prot packets bytes flags'.split()

def get_report_txt(fn, filter):
    result = list(pynfdump.search_file(fn, filterfile=filter))
    if not result:
        return

    ips={}
    dests=set()

    out = "Traffic to blocked hosts detected:\n\n"

    for rec in result:
        ips.setdefault(rec['srcip'],[]).append(rec)
        dests.add(rec['dstip'])

    for ip in dests:
        b = model.get_ip(str(ip))[0]
        out +=  "%-15s %s %s\n" % (ip, b.who, b.comment)

    out += "\n"

    for ip,recs in ips.items():
        out += "%s\n" % ip
        for rec in recs:
            out += " %(first)s %(prot)s %(srcip)s:%(srcport)s -> %(dstip)s:%(dstport)s %(packets)s\n" % rec
        out += "\n"

    return out


def export_file(notify, fn, filter):
    txt = get_report_txt(fn, filter)
    print txt

def main():
    import sys
    from optparse import OptionParser
    parser = OptionParser()
    parser.add_option("-i", "--filter",    dest="filter",     action="store",  help="filter file")
    parser.add_option("-f", "--file",      dest="file",       action="store",  help="single file")
    parser.add_option("-n", "--notify",    dest="notify",     action="append", help="email addresses to notify")

    (options, args) = parser.parse_args()

    o = options

    if not o.notify or not o.file:
        parser.print_help()
        sys.exit(1)

    return export_file(o.notify, o.file, o.filter)

if __name__ == "__main__":
    main()
